[project]
name = "pokemon-scouting"
version = "0.0.1"
description = "A proxy to pokeapi"
readme = "README.md"
requires-python = ">=3.13"

dependencies = [
    "aiosqlite>=0.21.0",
    "alembic>=1.15.1",
    "anyio>=4.9.0",
    "environs>=14.1.1",
    "httptools>=0.6.4",
    "httpx>=0.28.1",
    "loguru>=0.7.3",
    "quart>=0.20.0",
    "quart-cors>=0.8.0",
    "sqlalchemy>=2.0.39",
    "typer>=0.15.2",
    "uuid7>=0.1.0",
    "uvicorn>=0.34.0",
    "uvloop>=0.21.0",
]

[dependency-groups]
dev = [
    "bandit>=1.8.3",
    "coverage>=7.7.1",
    "faker>=37.1.0",
    "pre-commit>=4.2.0",
    "pyright>=1.1.397",
    "pytest>=8.3.5",
    "pytest-asyncio>=0.25.3",
    "pytest-env>=1.1.5",
    "pytest-sugar>=1.0.0",
    "ruff>=0.11.0",
]

# -- Library configs -- #

# Ruff Configs
[tool.ruff]
line-length = 88
target-version = "py313"

[tool.ruff.lint]
extend-select = ["E501"]

# Pyright configs
[tool.pyright]
exclude = [".venv/", "venv/", "*/__pycache__/"]
pythonVersion = "3.13"
pythonPlatform = "Linux"
venvPath = ".venv"
venv = "."
typeCheckingMode = "strict"
reportUnusedImport = false

# Bandit configs
[tool.bandit]
exclude_dirs = ["tests", ".venv"]

# Pytest configs
[tool.pytest.ini_options]
addopts = "-s -v --durations=5"
markers = []
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"

# Pytest-Env configs
[tool.pytest_env]
POKEMON_SCOUTING_ENVIRONMENT = "testing"
POKEMON_SCOUTING_DATABASE_URL = "sqlite+aiosqlite:///:memory:"
POKEMON_SCOUTING_DEBUG = true

# Coverage configs
[tool.coverage.run]
branch = false
data_file = ".coverage/coverage"
omit = [
    "test/*",
    "tests/*",
    "venv/*",
    ".venv/*",
    "*migrations/*",
    "*cli/*",
    "*conftest.py",
    "manage.py",
]

[tool.coverage.report]
skip_covered = true
precision = 2
# fail_under = 70
exclude_also = ["if TYPE_CHECKING:", "@abstractmethod"]

[tool.coverage.html]
directory = ".coverage/html-report"
skip_covered = true
